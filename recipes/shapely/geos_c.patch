--- shapely/geos.py	2016-03-29 13:16:27.000000000 -0300
+++ shapely/geos.py	2016-03-31 09:46:49.901345578 -0300
@@ -63,65 +63,17 @@
 _lgeos = None
 
 if sys.platform.startswith('linux'):
-    _lgeos = load_dll('geos_c', fallbacks=['libgeos_c.so.1', 'libgeos_c.so'])
+    _lgeos = CDLL(os.path.join(sys.prefix, 'lib', 'libgeos_c.so'))
     free = load_dll('c').free
     free.argtypes = [c_void_p]
     free.restype = None
-
 elif sys.platform == 'darwin':
-    # Test to see if we have a delocated wheel with a GEOS dylib.
-    geos_whl_dylib = os.path.abspath(os.path.join(os.path.dirname(
-        __file__), '.dylibs/libgeos_c.1.dylib'))
-    if os.path.exists(geos_whl_dylib):
-        _lgeos = CDLL(geos_whl_dylib)
-        LOG.debug("Found GEOS DLL: %r, using it.", _lgeos)
-
-    else:
-        if hasattr(sys, 'frozen'):
-            try:
-                # .app file from py2app
-                alt_paths = [os.path.join(os.environ['RESOURCEPATH'],
-                            '..', 'Frameworks', 'libgeos_c.dylib')]
-            except KeyError:
-                # binary from pyinstaller
-                alt_paths = [
-                    os.path.join(sys.executable, 'libgeos_c.dylib')]
-        else:
-            alt_paths = [
-                # The Framework build from Kyng Chaos
-                "/Library/Frameworks/GEOS.framework/Versions/Current/GEOS",
-                # macports
-                '/opt/local/lib/libgeos_c.dylib',
-            ]
-        _lgeos = load_dll('geos_c', fallbacks=alt_paths)
-
+    _lgeos = CDLL(os.path.join(sys.prefix, 'lib', 'libgeos_c.dylib'))
     free = load_dll('c').free
     free.argtypes = [c_void_p]
     free.restype = None
-
 elif sys.platform == 'win32':
-    try:
-        egg_dlls = os.path.abspath(
-            os.path.join(os.path.dirname(__file__), 'DLLs'))
-        if hasattr(sys, "frozen"):
-            wininst_dlls = os.path.normpath(
-                os.path.abspath(sys.executable+'../../DLLS'))
-        else:
-            wininst_dlls = os.path.abspath(os.__file__ + "../../../DLLs")
-        original_path = os.environ['PATH']
-        os.environ['PATH'] = "%s;%s;%s" % \
-            (egg_dlls, wininst_dlls, original_path)
-        _lgeos = CDLL("geos.dll")
-    except (ImportError, WindowsError, OSError):
-        raise
-
-    def free(m):
-        try:
-            cdll.msvcrt.free(m)
-        except WindowsError:
-            # XXX: See http://trac.gispython.org/projects/PCL/ticket/149
-            pass
-
+    _lgeos = CDLL(os.path.join(sys.prefix, 'Library', 'bin', 'geos_c.dll'))
 elif sys.platform == 'sunos5':
     _lgeos = load_dll('geos_c', fallbacks=['libgeos_c.so.1', 'libgeos_c.so'])
     free = CDLL('libc.so.1').free
